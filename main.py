import os
from telegram import Update, ReplyKeyboardMarkup, ReplyKeyboardRemove
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ConversationHandler, CallbackContext
# from dotenv import load_dotenv

# load_dotenv()
# TOKEN = os.getenv("BOT_TOKEN")

# –°—Ç–∞–Ω –¥–ª—è —Ä–æ–∑–º–æ–≤–∏
(
    SELECT_ACTION,
    SELECT_MEDICAL,
    PROCESS_CONCLUSION,
    UPLOAD_DOCUMENT,
    CONFIRM_REQUEST,
    INSURANCE_MENU,
    AWAITING_DOCUMENTS,
    CONDITIONS_DOCUMENTS,
    STEP_1,
    STEP_2,
    STEP_4,
    UPLOAD_PASSPORT,
    STEP_5,
    UPLOAD_IPN,
    UPLOAD_MED_DOC,
    STEP_6,
    UPLOAD_FINANCIAL_DOCUMENT,
    STEP_7,
    STEP_8,
    STEP_9,
    STEP_10,
    STEP_11,
) = range(22)

# –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é
main_menu = [["–ú–µ–¥–∏—Ü–∏–Ω–∞ üöë", "–ê–≤—Ç–æ üöò"],
                ["–ù–µ—Å—â–∞—Å–Ω–∏–π –≤–∏–ø–∞–¥–æ–∫ üìÑ", "–í–∏–ø–ª–∞—Ç–∞ –∑–∞ –¥—ñ–∞–≥–Ω–æ–∑–æ–º üí≥"],
                ["–ü–æ–¥–æ—Ä–æ–∂ üåé", "–°—Ç—Ä–∞—Ö—É–≤–∞–Ω–Ω—è –∂–∏—Ç—Ç—è ‚òÇÔ∏è"],
                ["–ú–∞–π–Ω–æ üè†", "–ö—É–ø–∏—Ç–∏ –ø–æ–ª—ñ—Å üìã"]]

# –ú–µ–Ω—é "–º–µ–¥–∏—Ü–∏–Ω–∞"
medical_menu = [["–ó–∞–ø–∏—Å –¥–æ –ª—ñ–∫–∞—Ä—è üíä", "–í–∏—Å–Ω–æ–≤–æ–∫ –ª—ñ–∫–∞—Ä—è üìù"],
                ["–ì–∞—Ä–∞–Ω—Ç—É–≤–∞—Ç–∏ –∑–∞–ø–∏—Å üè•", "–í—ñ–¥—à–∫–æ–¥—É–≤–∞–Ω–Ω—è üí≥"],
                ["–ß–∞—Ç (—ñ–Ω—à—ñ –ø–∏—Ç–∞–Ω–Ω—è üí¨)","–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è üîô"]]


async def start(update: Update, context: CallbackContext):
    reply_markup = ReplyKeyboardMarkup(main_menu, resize_keyboard=True)
    await update.message.reply_text("–í–∞—Å –≤—ñ—Ç–∞—î –£–ù–Ü–ö–ê! \n \n –û–±–µ—Ä—ñ—Ç—å –ø–∏—Ç–∞–Ω–Ω—è, —è–∫–µ –í–∞—Å —Ü—ñ–∫–∞–≤–∏—Ç—å:", reply_markup=reply_markup)
    return SELECT_ACTION

async def select_action(update: Update, context: CallbackContext):
    text = update.message.text
    if text == "–ú–µ–¥–∏—Ü–∏–Ω–∞ üöë":
        reply_markup = ReplyKeyboardMarkup(medical_menu, resize_keyboard=True)
        await update.message.reply_text("–í—Å—Ç–∞–Ω–æ–≤–ª—é–π –º–æ–±—ñ–ª—å–Ω–∏–π –¥–æ–¥–∞—Ç–æ–∫ MyUNIQA  –¥–ª—è —à–≤–∏–¥–∫–æ–≥–æ –∑–∞–ø–∏—Å—É –≤ –Ω–∞–π–±–ª–∏–∂—á–æ–º—É –º–µ–¥–∑–∞–∫–ª–∞–¥—ñ, –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –≤–∏—Å–Ω–æ–≤–∫—É –ª—ñ–∫–∞—Ä—è —Ç–∞ –æ—Ç—Ä–∏–º—É–π –±–µ–∑–ª—ñ—á —ñ–Ω—à–∏—Ö –ø–µ—Ä–µ–≤–∞–≥ –∑–∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º https://cutt.ly/UNIQAAppChat", reply_markup=reply_markup)
        return SELECT_MEDICAL
    return SELECT_ACTION

async def select_medical(update: Update, context: CallbackContext):
    text = update.message.text
    if text == "–í–∏—Å–Ω–æ–≤–æ–∫ –ª—ñ–∫–∞—Ä—è üìù":
        reply_markup = ReplyKeyboardMarkup([["–ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏", "–ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –¥–æ–¥–∞—Ç–æ–∫"], ["–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è"]], resize_keyboard=True)
        await update.message.reply_text('–î–ª—è –ø–æ–¥–∞–ª—å—à–æ—ó –æ—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ—ó –æ–±—Å–ª—É–≥–æ–≤—É–≤–∞–Ω–Ω—è, –±—É–¥—å –ª–∞—Å–∫–∞, —Å—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—É–π—Ç–µ –≤–∏—Å–Ω–æ–≤–æ–∫ –ª—ñ–∫–∞—Ä—è  —Ç–∞ –≤—ñ–¥–ø—Ä–∞–≤—Ç–µ –≤ —á–∞—Ç. \n –ó–≤–µ—Ä–Ω—ñ—Ç—å —É–≤–∞–≥—É, –≤–∏—Å–Ω–æ–≤–æ–∫ –º–∞—î –º—ñ—Å—Ç–∏—Ç–∏: \n - –í–∞—à–µ –ü–Ü–ë \n - –î—ñ–∞–≥–Ω–æ–∑ \n - –î–∞—Ç—É –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—ó \n - –ü–µ—á–∞—Ç–∫—É –ª—ñ–∫—É–≤–∞–ª—å–Ω–æ–≥–æ –∑–∞–∫–ª–∞–¥—É (–ª—ñ–∫–∞—Ä—è) \n –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å "–ü–†–û–î–û–í–ñ–ò–¢–ò" –∞–±–æ –ó–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ –º–æ–±—ñ–ª—å–Ω–∏–π –¥–æ–¥–∞—Ç–æ–∫', reply_markup=reply_markup)
        return PROCESS_CONCLUSION
    
    elif text == "–í—ñ–¥—à–∫–æ–¥—É–≤–∞–Ω–Ω—è üí≥":
        return await insurance_menu(update, context)
    
    elif text == "–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è üîô":
        reply_markup = ReplyKeyboardMarkup(main_menu, resize_keyboard=True)
        await update.message.reply_text("–í–∞—Å –≤—ñ—Ç–∞—î –£–ù–Ü–ö–ê! \n \n –û–±–µ—Ä—ñ—Ç—å –ø–∏—Ç–∞–Ω–Ω—è, —è–∫–µ –í–∞—Å —Ü—ñ–∫–∞–≤–∏—Ç—å:", reply_markup=reply_markup)
        return SELECT_ACTION
    return SELECT_MEDICAL

# ==========–í–∏—Å–Ω–æ–≤–æ–∫ –ª—ñ–∫–∞—Ä—è=========
async def process_conclusion(update: Update, context: CallbackContext):
    text = update.message.text
    if text == "–ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏":
        await update.message.reply_text("–î–æ–¥–∞–π—Ç–µ —Ñ–æ—Ç–æ–∫–æ–ø—ñ—é –º–µ–¥–∏—á–Ω–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç—É –∑—Ä–æ–±–ª–µ–Ω—É –∑ –æ—Ä–∏–≥—ñ–Ω–∞–ª—É", reply_markup=ReplyKeyboardRemove())
        return UPLOAD_DOCUMENT
    elif text == "–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è":
        reply_markup = ReplyKeyboardMarkup(medical_menu, resize_keyboard=True)
        await update.message.reply_text("–û–±–µ—Ä—ñ—Ç—å –¥—ñ—é:", reply_markup=reply_markup)
        return SELECT_MEDICAL
    return PROCESS_CONCLUSION

async def upload_document(update: Update, context: CallbackContext):
    if update.message.photo:
        reply_markup = ReplyKeyboardMarkup([["–î–æ–¥–∞—Ç–∏ —â–µ", "–ù–∞—Å—Ç—É–ø–Ω–∏–π –∫—Ä–æ–∫"]], resize_keyboard=True)
        await update.message.reply_text("–î–æ–¥–∞—Ç–∏ —â–µ –æ–¥–Ω—É —Å—Ç–æ—Ä—ñ–Ω–∫—É –¥–∞–Ω–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç—É —á–∏ –ø–µ—Ä–µ–π—Ç–∏ –¥–æ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –∫—Ä–æ–∫—É?", reply_markup=reply_markup)
        return UPLOAD_DOCUMENT

async def next_step(update: Update, context: CallbackContext):
    text = update.message.text
    if text == "–ù–∞—Å—Ç—É–ø–Ω–∏–π –∫—Ä–æ–∫":
        reply_markup = ReplyKeyboardMarkup([["–ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ –∑–∞—è–≤–∫—É", "–°–∫–∞—Å—É–≤–∞—Ç–∏ –∑–∞—è–≤–∫—É"]], resize_keyboard=True)
        await update.message.reply_text("–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –ø–æ–¥–∞—á—ñ –∑–∞—è–≤–∏", reply_markup=reply_markup)
        return CONFIRM_REQUEST
    elif text == "–î–æ–¥–∞—Ç–∏ —â–µ":
        await update.message.reply_text("–î–æ–¥–∞–π—Ç–µ —Ñ–æ—Ç–æ–∫–æ–ø—ñ—é –º–µ–¥–∏—á–Ω–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç—É –∑—Ä–æ–±–ª–µ–Ω—É –∑ –æ—Ä–∏–≥—ñ–Ω–∞–ª—É")
    return UPLOAD_DOCUMENT

async def confirm_request(update: Update, context: CallbackContext):
    text = update.message.text
    if text == "–ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ –∑–∞—è–≤–∫—É":
        reply_markup = ReplyKeyboardMarkup(medical_menu, resize_keyboard=True)
        await update.message.reply_text("–î—è–∫—É—î–º–æ, –í–∞—à –≤–∏—Å–Ω–æ–≤–æ–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ ‚Äã–ø—Ä–∏–π–Ω—è—Ç–∏–π –≤ —Ä–æ–±–æ—Ç—É. \n –û—Ä—ñ—î–Ω—Ç–æ–≤–Ω–∏–π —á–∞—Å –≤–∏—Ä—ñ—à–µ–Ω–Ω—è 1 —Ä–æ–±–æ—á–∞ –¥–æ–±–∞‚Äã. ‚Äã–ß–∞—Å –º‚Äã‚Äã‚Äã–æ–∂–µ –±—É—Ç–∏ –¥–µ—â–æ –∑–±—ñ–ª—å—à–µ–Ω–∏–π –≤ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –≤—ñ–¥ —Å–∫–ª–∞–¥–Ω–æ—Å—Ç—ñ, –≤ —Ç–æ–º—É —á–∏—Å–ª—ñ, –≤–∫–ª—é—á–∞—é—á–∏ —á–∞—Å –¥–ª—è –ø–æ—à—É–∫—É –º–µ–¥–∏–∫–∞–º–µ–Ω—Ç—ñ–≤. \n \n  –£ –≤–∏–ø–∞–¥–∫—É –ø–æ–≤–Ω–æ–≥–æ –ø–æ–∫—Ä–∏—Ç—Ç—è  –í–∏ –æ—Ç—Ä–∏–º–∞—î—Ç–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤ Viber –∞–±–æ SMS. \n \n  –Ø–∫—â–æ –ø–æ–∫—Ä–∏—Ç—Ç—è –±—É–¥–µ –Ω–µ–ø–æ–≤–Ω–∏–º, –Ω–∞—à –ª—ñ–∫–∞—Ä –æ–±–æ–≤'—è–∑–∫–æ–≤–æ –í–∞–º –∑–∞—Ç–µ–ª–µ—Ñ–æ–Ω—É—î.\n \n  –î—è–∫—É—î–º–æ, —â–æ –¥–æ–≤—ñ—Ä—è—î—Ç–µ –Ω–∞–º!‚Äã‚Äã\n \n –ó–∞—è–≤–∫–∞ ‚Ññ 389223", reply_markup=reply_markup)
        return SELECT_MEDICAL
    elif text == "–°–∫–∞—Å—É–≤–∞—Ç–∏ –∑–∞—è–≤–∫—É":
        reply_markup = ReplyKeyboardMarkup(medical_menu, resize_keyboard=True)
        await update.message.reply_text("–û–±–µ—Ä—ñ—Ç—å –¥—ñ—é:", reply_markup=reply_markup)
        return SELECT_MEDICAL
# =============–ö—ñ–Ω–µ—Ü—å –≤–∏—Å–Ω–æ–≤–æ–∫ –ª—ñ–∫–∞—Ä—è=============   


# ===========–í—ñ–¥—à–∫–æ–¥—É–≤–∞–Ω–Ω—è ==========
# –û–±—Ä–æ–±–Ω–∏–∫ –≤—ñ–¥—à–∫–æ–¥—É–≤–∞–Ω–Ω—è"
async def insurance_menu(update: Update, context: CallbackContext):
    reply_markup = ReplyKeyboardMarkup(
        [["–ü–æ–¥–∞—Ç–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∏ üìÑ", "–£–º–æ–≤–∏ ‚ÑπÔ∏è ‚ùì‚ùóÔ∏è"], ["–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è"]],
        resize_keyboard=True
    )
    await update.message.reply_text("–û–±–µ—Ä—ñ—Ç—å –¥—ñ—é:", reply_markup=reply_markup)
    return AWAITING_DOCUMENTS

    
async def awaiting_documents(update: Update, context: CallbackContext):
    text = update.message.text
    if text == "–ü–æ–¥–∞—Ç–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∏ üìÑ":
        # –í–∏–≤–µ—Å—Ç–∏ –≤–∏–ø–∞–¥–∫–æ–≤–∏–π —Ç–µ–∫—Å—Ç
        await update.message.reply_text(
            "–í–∞—Å –í—ñ—Ç–∞—î –ß–∞—Ç-–±–æ—Ç –ø—Ä–∏–∑–Ω–∞—á–µ–Ω–∏–π –¥–ª—è –ø–æ–¥–∞—á—ñ –∑–∞—è–≤–∏ —Ç–∞ –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤ –∑–∞ –¥–æ–≥–æ–≤–æ—Ä–∞–º–∏ –¥–æ–±—Ä–æ–≤—ñ–ª—å–Ω–æ–≥–æ –º–µ–¥–∏—á–Ω–æ–≥–æ —Å—Ç—Ä–∞—Ö—É–≤–∞–Ω–Ω—è.\n"
            "–ó —Ç—É—Ä–±–æ—Ç–æ—é –ø—Ä–æ –í–∞—Å –£–ù–Ü–ö–ê –Ω–∞–¥–∞—î –º–æ–∂–ª–∏–≤—ñ—Å—Ç—å –æ—Ç—Ä–∏–º–∞—Ç–∏ —Å—Ç—Ä–∞—Ö–æ–≤—É –≤–∏–ø–ª–∞—Ç—É –∑–∞ —Å–∫–∞–Ω–∞–º–∏/—Ñ–æ—Ç–æ –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤. "
            "–£ —Ä–∞–∑—ñ –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ—Å—Ç—ñ —Ä–æ–∑–≥–ª—è–¥ —Å–ø—Ä–∞–≤–∏ –º–æ–∂–µ –±—É—Ç–∏ –≤—ñ–¥—Ç–µ—Ä–º—ñ–Ω–æ–≤–∞–Ω–∏–π –¥–æ –Ω–∞–¥–∞–Ω–Ω—è –æ—Ä–∏–≥—ñ–Ω–∞–ª—ñ–≤ –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤.\n"
            "–ù–∞–≥–æ–ª–æ—à—É—î–º–æ –Ω–∞ –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ—Å—Ç—ñ –Ω–∞–¥–∞–Ω–Ω—è –æ—Ä–∏–≥—ñ–Ω–∞–ª—ñ–≤ –ø–∞–∫–µ—Ç—É –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤ –æ–¥—Ä–∞–∑—É –ø—ñ—Å–ª—è —Å–∫–∞—Å—É–≤–∞–Ω–Ω—è –≤—ñ–π—Å—å–∫–æ–≤–æ–≥–æ —Å—Ç–∞–Ω—É –≤ –£–∫—Ä–∞—ó–Ω—ñ.\n\n"
            "–©–æ–± –ø–æ–¥–∞—Ç–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∏ –≤ –µ–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–º—É –≤–∏–≥–ª—è–¥—ñ —à–≤–∏–¥–∫–æ —Ç–∞ –∑—Ä—É—á–Ω–æ —Ä–µ–∫–æ–º–µ–Ω–¥—É—î–º–æ:\n"
            "1. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ —á–∏ –æ—Ç—Ä–∏–º–∞–ª–∏ –°–ú–° –∑ ‚Ññ —Å–ø—Ä–∞–≤–∏\n"
            "2. –ü–æ—Ä–∞—Ö—É–π—Ç–µ –∑–∞–≥–∞–ª—å–Ω—É —Å—É–º—É –ø–æ –≤—Å—ñ–º —Ñ—ñ–Ω–∞–Ω—Å–æ–≤–∏–º –¥–æ–∫—É–º–µ–Ω—Ç–∞–º (—Ñ—ñ—Å–∫–∞–ª—å–Ω–∏–º/—Ç–æ–≤–∞—Ä–Ω–∏–º —á–µ–∫–∞–º)\n"
            "3. –û–±–µ—Ä—ñ—Ç—å –º–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç–∏: –Ω–∞ –í–∞—à—É –±–∞–Ω–∫—ñ–≤—Å—å–∫—É –∫–∞—Ä—Ç–∫—É (–≤–∫–∞–∑—É—é—á–∏ –Ω–æ–º–µ—Ä IBAN), –∞–±–æ –≥–æ—Ç—ñ–≤–∫–æ—é —á–µ—Ä–µ–∑ —Å–∏—Å—Ç–µ–º—É –†–∞–π—Ñ—Ñ–∞–π–∑–µ–Ω-–µ–∫—Å–ø—Ä–µ—Å –≤ –∫–∞—Å—ñ –±—É–¥—å-—è–∫–æ–≥–æ –≤—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è –†–∞–π—Ñ—Ñ–∞–π–∑–µ–Ω-–±–∞–Ω–∫—É\n"
            "4. –ü—ñ–¥–≥–æ—Ç—É–π—Ç–µ –Ω–∞—Å—Ç—É–ø–Ω—ñ –¥–æ–∫—É–º–µ–Ω—Ç–∏:\n"
            "   ‚Ä¢ –ü–∞—Å–ø–æ—Ä—Ç (ID –∫–∞—Ä—Ç–∫–∞)\n"
            "   ‚Ä¢ –Ü–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω–∏–π –ø–æ–¥–∞—Ç–∫–æ–≤–∏–π –Ω–æ–º–µ—Ä (–Ü–ü–ù)\n"
            "   ‚Ä¢ –°–≤—ñ–¥–æ—Ü—Ç–≤–æ –ø—Ä–æ –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è –¥–∏—Ç–∏–Ω–∏\n"
            "   ‚Ä¢ –î–æ–∫—É–º–µ–Ω—Ç –∑ –ª—ñ–∫—É–≤–∞–ª—å–Ω–æ–≥–æ –∑–∞–∫–ª–∞–¥—É\n"
            "   ‚Ä¢ –§—ñ–Ω–∞–Ω—Å–æ–≤—ñ –¥–æ–∫—É–º–µ–Ω—Ç–∏, —â–æ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂—É—é—Ç—å —Ñ–∞–∫—Ç–∏—á–Ω—É –æ–ø–ª–∞—Ç—É –∫–æ—à—Ç—ñ–≤ (—Ñ—ñ—Å–∫–∞–ª—å–Ω—ñ/—Ç–æ–≤–∞—Ä–Ω—ñ —á–µ–∫–∏)\n"
            "5. –û–∑–Ω–∞–π–æ–º–∏—Ç–∏—Å—è –∑ –æ—Å–æ–±–ª–∏–≤–æ—Å—Ç—è–º–∏ –ø–æ–¥–∞—á—ñ –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤ –Ω–∞ —Å–∞–π—Ç—ñ UNIQA\n\n"
            "–û–±–µ—Ä—ñ—Ç—å –Ω–∞–π–±—ñ–ª—å—à –∑—Ä—É—á–Ω–∏–π –¥–ª—è –í–∞—Å —Ñ–æ—Ä–º–∞—Ç –ø—Ä–∏–∫—Ä—ñ–ø–ª–µ–Ω–Ω—è –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤: –¥–æ–¥–∞—Ç–∏ —Ñ–æ—Ç–æ –∑ –≥–∞–ª–µ—Ä–µ—ó (–æ–¥–∏–Ω –∞–±–æ –¥–µ–∫—ñ–ª—å–∫–∞ –≤—ñ–¥—Ä–∞–∑—É), "
            "–ø—Ä–∏–∫—Ä—ñ–ø–∏—Ç–∏ —Å–∫–∞–Ω-–∫–æ–ø—ñ—é –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤ —É —Ñ–æ—Ä–º–∞—Ç—ñ PDF –∞–±–æ –≤—ñ–¥—Ä–∞–∑—É —Å—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—É–≤–∞—Ç–∏, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—É —Ñ—É–Ω–∫—Ü—ñ—é –º–µ—Å–µ–Ω–¥–∂–µ—Ä–∞.\n\n"
            "–†–æ–∑–ø–æ—á–Ω—ñ—Ç—å –ø—Ä–æ—Ü–µ—Å –ø–æ–¥–∞—á—ñ —Ñ–æ—Ç–æ-–º–∞—Ç–µ—Ä—ñ–∞–ª—ñ–≤ –∑–∞ –í–∞—à–∏–º –≤–∏–ø–∞–¥–∫–æ–º. –¶–µ–π –ø—Ä–æ—Ü–µ—Å –∑–∞–π–º–∞—î –¥–æ 5 —Ö–≤–∏–ª–∏–Ω (4 –∫—Ä–æ–∫–∏)")
        reply_markup = ReplyKeyboardMarkup([["–î–∞–ª—ñ", "–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è"]], resize_keyboard=True)
        await update.message.reply_text("–ù–∞—Ç–∏—Å–∫–∞—é—á–∏ ¬´–î–∞–ª—ñ¬ª, —è –ø–æ–≥–æ–¥–∂—É—é—Å—å –∑ —É–º–æ–≤–∞–º–∏ –û—Ñ–µ—Ä—Ç–∏ —Ç–∞ –Ω–∞–¥–∞—é –∑–≥–æ–¥—É –Ω–∞ –æ–±—Ä–æ–±–∫—É —Å–≤–æ—ó—Ö –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∏—Ö –¥–∞–Ω–∏—Ö –∑–≥—ñ–¥–Ω–æ —É–º–æ–≤ –û—Ñ–µ—Ä—Ç–∏:", reply_markup=reply_markup)
        await update.message.reply_text("https://uniqa.ua/content/uploads/Oferta_chat_bot_Fiz_2024.pdf", reply_markup=reply_markup)
        return STEP_1
    elif text == "–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è":
        reply_markup = ReplyKeyboardMarkup(medical_menu, resize_keyboard=True)
        await update.message.reply_text("–û–±–µ—Ä—ñ—Ç—å –¥—ñ—é", reply_markup=reply_markup)
        return SELECT_MEDICAL
    elif text == "–£–º–æ–≤–∏ ‚ÑπÔ∏è ‚ùì‚ùóÔ∏è":
        return await conditions_documents(update, context)

async def conditions_documents(update: Update, context: CallbackContext):
    text = update.message.text
    if text == "–£–º–æ–≤–∏ ‚ÑπÔ∏è ‚ùì‚ùóÔ∏è":
        await update.message.reply_text(
        "–û–∑–Ω–∞–π–æ–º—Ç–µ—Å—å —ñ–∑ –ø–æ—Ä–∞–¥–∞–º–∏ —â–æ–¥–æ –ø–æ–¥–∞–ª—å—à–∏—Ö –¥—ñ–π —É —Ä–∞–∑—ñ —Å—Ç—Ä–∞—Ö–æ–≤–æ–≥–æ –≤–∏–ø–∞–¥–∫—É –∑–∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º: \n https://uniqa.ua/case/medytsyna/\n\n"
        "–î—è–∫—É—î–º–æ –∑–∞ –∑–≤–µ—Ä–Ω–µ–Ω–Ω—è! \n\n",
        reply_markup = ReplyKeyboardMarkup([["–ü–æ–¥–∞—Ç–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∏ üìÑ", "–£–º–æ–≤–∏ ‚ÑπÔ∏è ‚ùì‚ùóÔ∏è"],["–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è"]], resize_keyboard=True)
        # parse_mode='Markdown'
    )
    return AWAITING_DOCUMENTS

# –ö—Ä–æ–∫ 1
async def step_1(update: Update, context: CallbackContext):
    text = update.message.text

    if text == "–î–∞–ª—ñ":
        await update.message.reply_text(
            "–ö—Ä–æ–∫ 1: –í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä —Å–ø—Ä–∞–≤–∏ —ñ–∑ —Å–º—Å-–ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:", 
            reply_markup=ReplyKeyboardRemove()
        )
        return STEP_1
    
    elif text == "–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è":
        # –ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –≤ –º–µ–Ω—é –≤—ñ–¥—à–∫–æ–¥—É–≤–∞–Ω–Ω—è
        reply_markup = ReplyKeyboardMarkup([["–ü–æ–¥–∞—Ç–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∏ üìÑ", "–£–º–æ–≤–∏ ‚ÑπÔ∏è ‚ùì‚ùóÔ∏è"], ["–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è"]], resize_keyboard=True)
        await update.message.reply_text("–û–±–µ—Ä—ñ—Ç—å –¥—ñ—é:", reply_markup=reply_markup)
        return AWAITING_DOCUMENTS

    elif text.isdigit():
        await update.message.reply_text(
            "–ö—Ä–æ–∫ 2: –í–≤–µ–¥—ñ—Ç—å –∑–∞–≥–∞–ª—å–Ω—É —Å—É–º—É –≤–∏—Ç—Ä–∞—á–µ–Ω–∏—Ö –∫–æ—à—Ç—ñ–≤ –≤–∫–∞–∑–∞–Ω–∏—Ö –Ω–∞ —Ñ—ñ—Å–∫–∞–ª—å–Ω–∏—Ö /—Ç–æ–≤–∞—Ä–Ω–∏—Ö —á–µ–∫–∞—Ö, –≥—Ä–Ω. (—Ç—ñ–ª—å–∫–∏ —Ü–∏—Ñ—Ä–∏):"
        )
        return STEP_2

    else:
        await update.message.reply_text(
            "–ù–æ–º–µ—Ä —Å–ø—Ä–∞–≤–∏ —ñ–∑ —Å–º—Å-–ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤–≤–µ–¥–µ–Ω–∏–π –Ω–µ –∫–æ—Ä–µ–∫—Ç–Ω–æ. –í–≤–µ–¥—ñ—Ç—å –π–æ–≥–æ –ø–æ–≤—Ç–æ—Ä–Ω–æ."
        )
        return STEP_1


    
# –ö—Ä–æ–∫ 2
async def step_2(update: Update, context: CallbackContext):
    text = update.message.text

    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –≤–≤–µ–¥–µ–Ω–µ —á–∏—Å–ª–æ
    if text and text.isdigit():
        await update.message.reply_text("–ö—Ä–æ–∫ 3: –£—Ç–æ—á–Ω—ñ—Ç—å –∑ –∫–∏–º —Å—Ç–∞–≤—Å—è —Å—Ç—Ä–∞—Ö–æ–≤–∏–π –≤–∏–ø–∞–¥–æ–∫ (–æ–±–µ—Ä—ñ—Ç—å –≤–∞—Ä—ñ–∞–Ω—Ç):", 
                                        reply_markup=ReplyKeyboardMarkup([["–ó—ñ –º–Ω–æ—é", "–ó –º–æ—î—é –¥–∏—Ç–∏–Ω–æ—é"],
                                                                          ["–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è"]], resize_keyboard=True))
        return STEP_4

    # –Ø–∫—â–æ –≤–≤–µ–¥–µ–Ω–µ –ù–ï —á–∏—Å–ª–æ, –∑–∞–ª–∏—à–∞—î–º–æ—Å—è –Ω–∞ –ö—Ä–æ—Ü—ñ 2 —ñ –≤–∏–¥–∞—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è
    else:
        await update.message.reply_text("–°—É–º–∞ –≤–≤–µ–¥–µ–Ω–∞ –Ω–µ –∫–æ—Ä–µ–∫—Ç–Ω–æ. –í–≤–µ–¥—ñ—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω–æ.")
        return STEP_2


# –ö—Ä–æ–∫ 4
async def step_4(update: Update, context: CallbackContext):
    text = update.message.text
    if text == "–ó—ñ –º–Ω–æ—é":
        await update.message.reply_text("–î–æ–¥–∞–π—Ç–µ —Ñ–æ—Ç–æ –∑–∞–ø–æ–≤–Ω–µ–Ω–∏—Ö —Å—Ç–æ—Ä—ñ–Ω–æ–∫ –ø–∞—Å–ø–æ—Ä—Ç—É –∞–±–æ –ø–∞—Å–ø–æ—Ä—Ç –Ω–æ–≤–æ–≥–æ –∑—Ä–∞–∑–∫–∞ (ID –∫–∞—Ä—Ç–∫–∞) –∑ 2-—Ö —Å—Ç–æ—Ä—ñ–Ω.", reply_markup=ReplyKeyboardRemove())
        return UPLOAD_PASSPORT
    elif text == "–ó –º–æ—î—é –¥–∏—Ç–∏–Ω–æ—é":
        await update.message.reply_text("–î–æ–¥–∞–π—Ç–µ –∫–æ–ø—ñ—é /—Ñ–æ—Ç–æ  —Å–≤—ñ–¥–æ—Ü—Ç–≤–∞ –ø—Ä–æ –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è –¥–∏—Ç–∏–Ω–∏", reply_markup=ReplyKeyboardRemove())
        return UPLOAD_PASSPORT
    elif text == "–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è":
        return await insurance_menu(update, context)

# –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ñ–æ—Ç–æ –ø–∞—Å–ø–æ—Ä—Ç–∞
async def upload_passport(update: Update, context: CallbackContext):
    if update.message.photo:
        reply_markup = ReplyKeyboardMarkup([["–î–æ–¥–∞—Ç–∏ —â–µ", "–ù–∞—Å—Ç—É–ø–Ω–∏–π –∫—Ä–æ–∫"]], resize_keyboard=True)
        await update.message.reply_text("–î–æ–¥–∞—Ç–∏ —â–µ —Ñ–æ—Ç–æ –∞–±–æ –ø–µ—Ä–µ–π—Ç–∏ –¥–æ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç—É?", reply_markup=reply_markup)
        return STEP_5
    else:
        await update.message.reply_text("–ë—É–¥—å –ª–∞—Å–∫–∞, –Ω–∞–¥—ñ—à–ª—ñ—Ç—å —Ñ–æ—Ç–æ.")
        return UPLOAD_PASSPORT

# –ö—Ä–æ–∫ 5: –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –Ü–ü–ù
async def step_5(update: Update, context: CallbackContext):
    text = update.message.text
    if text == "–ù–∞—Å—Ç—É–ø–Ω–∏–π –∫—Ä–æ–∫":
        await update.message.reply_text("–î–æ–¥–∞–π—Ç–µ –∫–æ–ø—ñ—é /—Ñ–æ—Ç–æ —ñ–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω–æ–≥–æ –ø–æ–¥–∞—Ç–∫–æ–≤–æ–≥–æ –Ω–æ–º–µ—Ä—É (–Ü–ü–ù) –∞–±–æ —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –ø–∞—Å–ø–æ—Ä—Ç—É –∑ –¥–æ–∑–≤–æ–ª–æ–º –∑–¥—ñ–π—Å–Ω—é–≤–∞—Ç–∏ –ø–ª–∞—Ç–µ–∂—ñ –±–µ–∑ –Ü–ü–ù", reply_markup=ReplyKeyboardRemove())
        return UPLOAD_IPN  # –ü–µ—Ä–µ—Ö–æ–¥–∏–º–æ –¥–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –Ü–ü–ù
    return STEP_5

# –û–±—Ä–æ–±–Ω–∏–∫ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –Ü–ü–ù
async def upload_ipn(update: Update, context: CallbackContext):
    if update.message.photo:
        reply_markup = ReplyKeyboardMarkup([["–î–æ–¥–∞—Ç–∏ —â–µ", "–ù–∞—Å—Ç—É–ø–Ω–∏–π –∫—Ä–æ–∫"]], resize_keyboard=True)
        await update.message.reply_text("–î–æ–¥–∞–π—Ç–µ —â–µ —Ñ–æ—Ç–æ –∞–±–æ –ø–µ—Ä–µ–π–¥—ñ—Ç—å –¥–æ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç—É.", reply_markup=reply_markup)
        return STEP_6  # –ü–µ—Ä–µ—Ö–æ–¥–∏–º–æ –¥–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ñ—ñ–Ω–∞–Ω—Å–æ–≤–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –ø—ñ—Å–ª—è —Ñ–æ—Ç–æ –Ü–ü–ù
    else:
        await update.message.reply_text("–ë—É–¥—å –ª–∞—Å–∫–∞, –Ω–∞–¥—ñ—à–ª—ñ—Ç—å —Ñ–æ—Ç–æ –Ü–ü–ù.")
        return UPLOAD_IPN

# ----------–æ–Ω–æ–≤–ª–µ–Ω–Ω—è--------
# –ö—Ä–æ–∫ 6: –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –º–µ–¥–∏—á–Ω–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞
async def step_6(update: Update, context: CallbackContext):
    text = update.message.text
    if text == "–ù–∞—Å—Ç—É–ø–Ω–∏–π –∫—Ä–æ–∫":
        await update.message.reply_text("–î–æ–¥–∞–π—Ç–µ –∫–æ–ø—ñ—é /—Ñ–æ—Ç–æ –¥–æ–∫—É–º–µ–Ω—Ç—É –∑ –ª—ñ–∫—É–≤–∞–ª—å–Ω–æ–≥–æ –∑–∞–∫–ª–∞–¥—É –∑–∞—Å–≤—ñ–¥—á–µ–Ω–æ–≥–æ –ø–µ—á–∞—Ç–∫–æ—é –∑–∞–∫–ª–∞–¥—É", reply_markup=ReplyKeyboardRemove())
        return UPLOAD_MED_DOC  # –ü–µ—Ä–µ—Ö–æ–¥–∏–º–æ –¥–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –Ü–ü–ù
    return STEP_6
# –û–±—Ä–æ–±–Ω–∏–∫ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –º–µ–¥–∏—á–Ω–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞
async def upload_med_doc(update: Update, context: CallbackContext):
    if update.message.photo:
        reply_markup = ReplyKeyboardMarkup([["–î–æ–¥–∞—Ç–∏ —â–µ", "–ù–∞—Å—Ç—É–ø–Ω–∏–π –∫—Ä–æ–∫"]], resize_keyboard=True)
        await update.message.reply_text("–î–æ–¥–∞–π—Ç–µ —â–µ —Ñ–æ—Ç–æ –∞–±–æ –ø–µ—Ä–µ–π–¥—ñ—Ç—å –¥–æ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç—É.", reply_markup=reply_markup)
        return STEP_7  # –ü–µ—Ä–µ—Ö–æ–¥–∏–º–æ –¥–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ñ—ñ–Ω–∞–Ω—Å–æ–≤–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –ø—ñ—Å–ª—è —Ñ–æ—Ç–æ –Ü–ü–ù
    else:
        await update.message.reply_text("–î–æ–¥–∞–π—Ç–µ –∫–æ–ø—ñ—é /—Ñ–æ—Ç–æ –¥–æ–∫—É–º–µ–Ω—Ç—É –∑ –ª—ñ–∫—É–≤–∞–ª—å–Ω–æ–≥–æ –∑–∞–∫–ª–∞–¥—É –∑–∞—Å–≤—ñ–¥—á–µ–Ω–æ–≥–æ –ø–µ—á–∞—Ç–∫–æ—é –∑–∞–∫–ª–∞–¥—É")
        return UPLOAD_MED_DOC
# ----------–∫—ñ–Ω–µ—Ü—å –æ–Ω–æ–≤–ª–µ–Ω–Ω—è--------

# –ö—Ä–æ–∫ 7: –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ñ—ñ–Ω–∞–Ω—Å–æ–≤–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞
async def step_7(update: Update, context: CallbackContext):
    text = update.message.text
    if text == "–ù–∞—Å—Ç—É–ø–Ω–∏–π –∫—Ä–æ–∫":
        await update.message.reply_text("–î–æ–¥–∞–π—Ç–µ –∫–æ–ø—ñ—é /—Ñ–æ—Ç–æ  —Ñ—ñ–Ω–∞–Ω—Å–æ–≤–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç—É, —â–æ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂—É—î —Ñ–∞–∫—Ç–∏—á–Ω—É –æ–ø–ª–∞—Ç—É –∫–æ—à—Ç—ñ–≤ (—Ñ—ñ—Å–∫–∞–ª—å–Ω—ñ/—Ç–æ–≤–∞—Ä–Ω—ñ —á–µ–∫–∏)", reply_markup=ReplyKeyboardRemove())
        return UPLOAD_FINANCIAL_DOCUMENT  # –ü–µ—Ä–µ—Ö–æ–¥–∏–º–æ –¥–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ñ—ñ–Ω–∞–Ω—Å–æ–≤–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞
    return STEP_7

# –û–±—Ä–æ–±–Ω–∏–∫ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ñ—ñ–Ω–∞–Ω—Å–æ–≤–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞
async def upload_financial_document(update: Update, context: CallbackContext):
    if update.message.photo:
        reply_markup = ReplyKeyboardMarkup([["–î–æ–¥–∞—Ç–∏ —â–µ", "–ü–µ—Ä–µ–π—Ç–∏ –¥–æ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç—É"]], resize_keyboard=True)
        await update.message.reply_text("–î–æ–¥–∞–π—Ç–µ —â–µ —Ñ–æ—Ç–æ –∞–±–æ –ø–µ—Ä–µ–π–¥—ñ—Ç—å –¥–æ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç—É.", reply_markup=reply_markup)
        return STEP_8
    else:
        await update.message.reply_text("–ë—É–¥—å –ª–∞—Å–∫–∞, –Ω–∞–¥—ñ—à–ª—ñ—Ç—å —Ñ–æ—Ç–æ —Ñ—ñ–Ω–∞–Ω—Å–æ–≤–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç—É.")
        return UPLOAD_FINANCIAL_DOCUMENT

# –ö—Ä–æ–∫ 8 : –í–∏–±—ñ—Ä —Å–ø–æ—Å–æ–±—É –≤–∏–ø–ª–∞—Ç–∏
async def step_8(update: Update, context: CallbackContext):
    text = update.message.text

    if text == "–ü–µ—Ä–µ–π—Ç–∏ –¥–æ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç—É":
        reply_markup = ReplyKeyboardMarkup(
            [["–†–∞–π—Ñ–∞–π–∑–µ–Ω-–µ–∫—Å–ø—Ä–µ—Å", "–†–µ–∫–≤—ñ–∑–∏—Ç–∏ (IBAN —Ä–∞—Ö—É–Ω–∫—É)"]], 
            resize_keyboard=True
        )
        await update.message.reply_text(
            "–ö—Ä–æ–∫ 4: –í–∫–∞–∂—ñ—Ç—å –±–∞–Ω–∫—ñ–≤—Å—å–∫—ñ —Ä–µ–∫–≤—ñ–∑–∏—Ç–∏ –∑–∞–∫–æ–Ω–Ω–æ–≥–æ –æ—Ç—Ä–∏–º—É–≤–∞—á–∞. \n –û–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é –∑ –∑–∞–ø—Ä–æ–ø–æ–Ω–æ–≤–∞–Ω–∏—Ö –Ω–∏–∂—á–µ: \n \n –í–∫–∞–∂—ñ—Ç—å –≤–∞—Ä—ñ–∞–Ω—Ç —è–∫–∏–º —á–∏–Ω–æ–º –í–∞–º –∑—Ä—É—á–Ω–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ –≤–∏–ø–ª–∞—Ç—É:",
            reply_markup=reply_markup
        )
        return STEP_9  # –ü–µ—Ä–µ—Ö—ñ–¥ –¥–æ –≤–∏–±–æ—Ä—É —Å–ø–æ—Å–æ–±—É –æ–ø–ª–∞—Ç–∏

    elif text == "–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è":
        # –ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤
        await update.message.reply_text(
            "–ë—É–¥—å –ª–∞—Å–∫–∞, –Ω–∞–¥—ñ—à–ª—ñ—Ç—å —Ñ–æ—Ç–æ —Ñ—ñ–Ω–∞–Ω—Å–æ–≤–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç—É.",
            reply_markup=ReplyKeyboardRemove()
        )
        return UPLOAD_FINANCIAL_DOCUMENT

    return STEP_8

# –ö—Ä–æ–∫ 9: –í–∏–±—ñ—Ä —Å–ø–æ—Å–æ–±—É –≤–∏–ø–ª–∞—Ç–∏
async def step_9(update: Update, context: CallbackContext):
    text = update.message.text

    if text == "–†–∞–π—Ñ–∞–π–∑–µ–Ω-–µ–∫—Å–ø—Ä–µ—Å":
        reply_markup = ReplyKeyboardMarkup(
            [["–ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏", "–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è"]], 
            resize_keyboard=True
        )
        await update.message.reply_text(
            "–°—É–º–∞ –≤–∏–ø–ª–∞—Ç–∏ –±—É–¥–µ –∑–º–µ–Ω—à–µ–Ω–∞ –Ω–∞ –∫–æ–º—ñ—Å—ñ—é –ê–¢ ¬´–†–∞–π—Ñ—Ñ–∞–π–∑–µ–Ω –ë–∞–Ω–∫¬ª —á–∏–Ω–Ω—É –Ω–∞ –¥–∞—Ç—É –æ–ø–µ—Ä–∞—Ü—ñ—ó.",
            reply_markup=reply_markup
        )
        return STEP_10  # –ü–µ—Ä–µ—Ö—ñ–¥ –¥–æ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è

    elif text == "–†–µ–∫–≤—ñ–∑–∏—Ç–∏ (IBAN —Ä–∞—Ö—É–Ω–∫—É)":
        await update.message.reply_text(
            "–í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä IBAN (UA‚Ä¶...29 —Å–∏–º–≤–æ–ª—ñ–≤):",
            reply_markup=ReplyKeyboardRemove()
        )
        return STEP_10  # –¢–æ–π –∂–µ —Å—Ç–∞–Ω, –∞–ª–µ –æ—á—ñ–∫—É—î IBAN

    elif text == "–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è":
        # –ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ step_7 (–≤–∏–±—ñ—Ä –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤)
        reply_markup = ReplyKeyboardMarkup(
            [["–î–æ–¥–∞—Ç–∏ —â–µ", "–ü–µ—Ä–µ–π—Ç–∏ –¥–æ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç—É"]],
            resize_keyboard=True
        )
        await update.message.reply_text(
            "–ë—É–¥—å –ª–∞—Å–∫–∞, –Ω–∞–¥—ñ—à–ª—ñ—Ç—å —Ñ–æ—Ç–æ —Ñ—ñ–Ω–∞–Ω—Å–æ–≤–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç—É.",
            reply_markup=reply_markup
        )
        return UPLOAD_FINANCIAL_DOCUMENT

    return STEP_9

# –ö—Ä–æ–∫ 10: –ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è —Ä–µ–∫–≤—ñ–∑–∏—Ç—ñ–≤ —Ç–∞ –Ω–∞–ø—Ä—è–º–∫—É –≤–∏–ø–ª–∞—Ç–∏
async def step_10(update: Update, context: CallbackContext):
    text = update.message.text

    if text == "–ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏" or (text and len(text) == 29):  # IBAN –∞–±–æ –∫–Ω–æ–ø–∫–∞
        reply_markup = ReplyKeyboardMarkup(
            [
                ["–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂—É—é –∫–æ—Ä–µ–∫—Ç–Ω—ñ—Å—Ç—å —Ä–µ–∫–≤—ñ–∑–∏—Ç—ñ–≤ —Ç–∞ –Ω–∞–ø—Ä—è–º–æ–∫ –≤–∏–ø–ª–∞—Ç–∏"],
                ["–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è", "–í—ñ–¥–º—ñ–Ω–∏—Ç–∏ –≤—ñ–¥–ø—Ä–∞–≤–∫—É –∑–∞—è–≤–∫–∏"]
            ],
            resize_keyboard=True
        )
        await update.message.reply_text(
            "–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂—É—é –∫–æ—Ä–µ–∫—Ç–Ω—ñ—Å—Ç—å —Ä–µ–∫–≤—ñ–∑–∏—Ç—ñ–≤ —Ç–∞ –Ω–∞–ø—Ä—è–º–æ–∫ –≤–∏–ø–ª–∞—Ç–∏:",
            reply_markup=reply_markup
        )
        return STEP_11

    elif text == "–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è":
        reply_markup = ReplyKeyboardMarkup(
            [["–†–∞–π—Ñ–∞–π–∑–µ–Ω-–µ–∫—Å–ø—Ä–µ—Å", "–†–µ–∫–≤—ñ–∑–∏—Ç–∏ (IBAN —Ä–∞—Ö—É–Ω–∫—É)"]],
            resize_keyboard=True
        )
        await update.message.reply_text(
            "–í–∏ –ø–æ–≤–µ—Ä–Ω—É–ª–∏—Å—è –Ω–∞ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–π –∫—Ä–æ–∫. –í–∏–±–µ—Ä—ñ—Ç—å —Å–ø–æ—Å—ñ–± –≤–∏–ø–ª–∞—Ç–∏:",
            reply_markup=reply_markup
        )
        return STEP_9

    elif text == "–í—ñ–¥–º—ñ–Ω–∏—Ç–∏ –≤—ñ–¥–ø—Ä–∞–≤–∫—É –∑–∞—è–≤–∫–∏":
        reply_markup = ReplyKeyboardMarkup(main_menu, resize_keyboard=True)
        await update.message.reply_text(
            "–í–∏ –ø–æ–≤–µ—Ä–Ω—É–ª–∏—Å—è –≤ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é. –ó–∞—è–≤–∫—É –Ω–µ –±—É–ª–æ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ.",
            reply_markup=reply_markup
        )
        return SELECT_ACTION

    await update.message.reply_text("–ù–µ–≤—ñ—Ä–Ω–∏–π –≤–≤—ñ–¥. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ.")
    return STEP_10


# –ö—Ä–æ–∫ 11: –ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –∑–∞—è–≤–∫–∏ —Ç–∞ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –≤ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é
async def step_11(update: Update, context: CallbackContext):
    text = update.message.text

    if text == "–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂—É—é –∫–æ—Ä–µ–∫—Ç–Ω—ñ—Å—Ç—å —Ä–µ–∫–≤—ñ–∑–∏—Ç—ñ–≤ —Ç–∞ –Ω–∞–ø—Ä—è–º–æ–∫ –≤–∏–ø–ª–∞—Ç–∏":
        # –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –∑–∞—è–≤–∫–∏...
        await update.message.reply_text("–í–∞—à—É –∑–∞—è–≤—É –ø—Ä–∏–π–Ω—è—Ç–æ –Ω–∞ —Ä–æ–∑–≥–ª—è–¥. –û—á—ñ–∫—É–π—Ç–µ –Ω–∞ –∑–≤–æ—Ä–æ—Ç–Ω–∏–π –∑–≤'—è–∑–æ–∫ –ø—Ä–æ—Ç—è–≥–æ–º ** —Ä–æ–±–æ—á–∏—Ö –¥–Ω—ñ–≤. –ü—Ä–∏ –ø—Ä–∏–π–Ω—è—Ç—Ç—ñ –ø–æ–∑–∏—Ç–∏–≤–Ω–æ–≥–æ —Ä—ñ—à–µ–Ω–Ω—è, —Å—Ç—Ä–∞—Ö–æ–≤–∞ –≤–∏–ø–ª–∞—Ç–∞ –±—É–¥–µ –ø—Ä–æ–≤–µ–¥–µ–Ω–∞ –≤ —Å—Ç—Ä–æ–∫–∏ –∑–≥—ñ–¥–Ω–æ –∑ —É–º–æ–≤–∞–º–∏ –î–æ–≥–æ–≤–æ—Ä—É –¥–æ–±—Ä–æ–≤—ñ–ª—å–Ω–æ–≥–æ –º–µ–¥–∏—á–Ω–æ–≥–æ —Å—Ç—Ä–∞—Ö—É–≤–∞–Ω–Ω—è. \n \n"
        "–ó–≤–µ—Ä—Ç–∞—î–º–æ –í–∞—à—É —É–≤–∞–≥—É –Ω–∞ —Ç–µ, —â–æ —è–∫—â–æ —Å—Ç—Ä–∞—Ö–æ–≤—ñ–π –∫–æ–º–ø–∞–Ω—ñ—ó '–£–ù–Ü–ö–ê' –Ω–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –Ω–∞–¥–∞–Ω–∏—Ö –º–∞—Ç–µ—Ä—ñ–∞–ª—ñ–≤ –¥–ª—è –≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è –æ–±—Å—Ç–∞–≤–∏–Ω —Å—Ç—Ä–∞—Ö–æ–≤–æ–≥–æ –≤–∏–ø–∞–¥–∫—É —Ç–∞ –∑–¥—ñ–π—Å–Ω–µ–Ω–Ω—è —Å—Ç—Ä–∞—Ö–æ–≤–æ—ó –≤–∏–ø–ª–∞—Ç–∏, —Å—Ç—Ä–∞—Ö–æ–≤–∞ –∫–æ–º–ø–∞–Ω—ñ—è '–£–ù–Ü–ö–ê' –º–æ–∂–µ –≤–∏–º–∞–≥–∞—Ç–∏ –Ω–∞–¥–∞–Ω–Ω—è –¥–æ–¥–∞—Ç–∫–æ–≤–∏—Ö –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤. \n \n"
        "–î—è–∫—É—î–º–æ —â–æ —Å–∫–æ—Ä–∏—Å—Ç–∞–ª–∏—Å—å –Ω–∞—à–∏–º —á–∞—Ç-–±–æ—Ç–æ–º. \n \n –ü–∞–∫–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤ ‚Ññ 389521"
        )
        # –ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –≤ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é
        reply_markup = ReplyKeyboardMarkup(main_menu, resize_keyboard=True)
        await update.message.reply_text(
            "–í–∞—Å –≤—ñ—Ç–∞—î –£–ù–Ü–ö–ê! \n \n –û–±–µ—Ä—ñ—Ç—å –ø–∏—Ç–∞–Ω–Ω—è, —è–∫–µ –í–∞—Å —Ü—ñ–∫–∞–≤–∏—Ç—å:",
            reply_markup=reply_markup
        )
        return SELECT_ACTION

    elif text == "–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è":
        # –ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ step_9
        return await step_10(update, context)

    elif text == "–í—ñ–¥–º—ñ–Ω–∏—Ç–∏ –≤—ñ–¥–ø—Ä–∞–≤–∫—É –∑–∞—è–≤–∫–∏":
        # –°–∫–∞—Å—É–≤–∞–Ω–Ω—è
        return await step_10(update, context)  # –ê–±–æ –≤—ñ–¥—Ä–∞–∑—É –≤ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é

    return STEP_11


# –õ–æ–≥—ñ–∫–∞ –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –Ω–µ–≤—ñ–¥–æ–º–∏—Ö –∫–æ–º–∞–Ω–¥
async def unknown(update: Update, context: CallbackContext):
    await update.message.reply_text('–í–∏–±–∞—á—Ç–µ, —è –Ω–µ –∑—Ä–æ–∑—É–º—ñ–≤, —â–æ –≤–∏ –º–∞—î—Ç–µ –Ω–∞ —É–≤–∞–∑—ñ.')

def main():
    application = Application.builder().token("5846578020:AAGcg3I2Nn3Yf6H-FAr-TcvNBfTOnTI3Pn4").build()

    conv_handler = ConversationHandler(
        entry_points=[CommandHandler("start", start)],
        states={
            SELECT_ACTION: [MessageHandler(filters.TEXT & ~filters.COMMAND, select_action)],
            SELECT_MEDICAL: [MessageHandler(filters.TEXT & ~filters.COMMAND, select_medical)],
            INSURANCE_MENU: [MessageHandler(filters.TEXT & ~filters.COMMAND, insurance_menu)],
            PROCESS_CONCLUSION: [MessageHandler(filters.TEXT & ~filters.COMMAND, process_conclusion)],
            UPLOAD_DOCUMENT: [MessageHandler(filters.PHOTO, upload_document),
                              MessageHandler(filters.TEXT & ~filters.COMMAND, next_step)],
            CONFIRM_REQUEST: [MessageHandler(filters.TEXT & ~filters.COMMAND, confirm_request)],
            AWAITING_DOCUMENTS: [MessageHandler(filters.TEXT & ~filters.COMMAND, awaiting_documents)],
            CONDITIONS_DOCUMENTS: [MessageHandler(filters.TEXT & ~filters.COMMAND, conditions_documents)],
            STEP_1: [MessageHandler(filters.TEXT & ~filters.COMMAND, step_1)],
            STEP_2: [MessageHandler(filters.TEXT & ~filters.COMMAND, step_2)],
            STEP_4: [MessageHandler(filters.TEXT & ~filters.COMMAND, step_4)],
            UPLOAD_PASSPORT: [MessageHandler(filters.PHOTO, upload_passport), MessageHandler(filters.TEXT & ~filters.COMMAND, next_step)],
            STEP_5: [MessageHandler(filters.TEXT & ~filters.COMMAND, step_5)],
            UPLOAD_IPN: [MessageHandler(filters.PHOTO, upload_ipn), MessageHandler(filters.TEXT & ~filters.COMMAND, step_6)],  # –ö—Ä–æ–∫ 6
            UPLOAD_MED_DOC: [MessageHandler(filters.PHOTO, upload_med_doc), MessageHandler(filters.TEXT & ~filters.COMMAND, step_6)],
            STEP_6: [MessageHandler(filters.TEXT & ~filters.COMMAND, step_6)],  # –ö—Ä–æ–∫ 6
            UPLOAD_FINANCIAL_DOCUMENT: [MessageHandler(filters.PHOTO, upload_financial_document), MessageHandler(filters.TEXT & ~filters.COMMAND, step_6)],  # –ö—Ä–æ–∫ 6
            STEP_7: [MessageHandler(filters.TEXT & ~filters.COMMAND, step_7)],  # –ö—Ä–æ–∫ 7
            STEP_8: [MessageHandler(filters.TEXT & ~filters.COMMAND, step_8)],  # –ö—Ä–æ–∫ 8
            STEP_9: [MessageHandler(filters.TEXT & ~filters.COMMAND, step_9)],  # –ö—Ä–æ–∫ 9
            STEP_10: [MessageHandler(filters.TEXT & ~filters.COMMAND, step_10)],  # –ö—Ä–æ–∫ 10
            STEP_11: [MessageHandler(filters.TEXT & ~filters.COMMAND, step_11)]  # –ö—Ä–æ–∫ 11
        },
        fallbacks=[
        CommandHandler("start", start),  # –î–æ–¥–∞—î–º–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ /start
        MessageHandler(filters.TEXT & ~filters.COMMAND, unknown)
    ]
        
    )

    application.add_handler(conv_handler)
    application.run_polling()

if __name__ == "__main__":
    main()